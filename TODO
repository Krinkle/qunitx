try this: $ npx ava --tap | npx tap-nyan

research mocha reporter(TAP > reporters | json stream metada then it consumes this metadata(how?))
example good reporters: spec(reporter), dot, tap, landing strip(interesting instead put percentage), jest

esbuild ./tmp/test/passing-tests.js  --bundle > test.js
parse qunitx in the package.json for config

failFast and babelOptions?
files(and to ignore), require, timeout
concurrencyStrategies

add node and browser options
add functionality to execute only one test
add reporters

pass timezone: https://stackoverflow.com/questions/16448754/how-to-use-a-custom-time-in-browser-to-test-for-client-vs-server-time-difference/39533934#39533934
= qunitx --timezone="US/Pacific"

QUnit regex filters

Jest Notes
==========
TestSequencer
- this failed in the past? run first
- when file changed latest
- this test run in the past and was long? long tests run first
- file size

TestScheduler
- schedule across threads
- reporters
- dont spawn many threads if total test count is small
jest-runner/jest-puppeteer(check this)

read jest-worker/worker_thread implementation


check if jest-qunit exists

jest-runtime(creates VM context)
allows module mocking, custom require implementation, also does transforms
runs the tests
transform is sync in jest(dep tracking problem)

TestResult / Repoter
- all data has to be json serializable for threads
- stack trace of errors
- how many assertions

AggregatedRestResult[]
- finished test case, how long, each assertion
- check jest runners

qunitx init


write test metadata(each test) if flag is provided

markdown reporter(interesting: https://mochajs.org/#markdown)
